@page "/"
@inject IJSRuntime JS

<PageTitle>Universal Coordinator</PageTitle>

<h4 class="text-2xl font-light mb-2">Creates universal clicks from AI recordings for <a href="https://perfecttower2.com">The Perfect Tower 2</a></h4>
<label class="block py-2 m-0 text-indigo-50 space-y-2">
	<p>This utility outputs resolution independent click instructions given 3 or more in game AI recordings at different resolutions. You can try <a href="/examples">examples.</a></p>
	<p class="py-1 font-semibold">Recording Instructions:</p>
	<ol class="list-decimal list-inside">
		<li>Press <kbd>F7</kbd> to start recording (must have scripts enabled <kbd>F4</kbd>)</li>
		<li>Resize window to a new resolution</li>
		<li>Click top-right most pixel (this records the current resolution)</li>
		<li>Click a sequence of the positions using visual landmarks to relocate between resizes.</li>
		<li>Press <kbd>F</kbd> to finish the recording</li>
	</ol>
	<p>Tip: Use <kbd>backspace</kbd> to undo unwanted clicks and to retry capturing clicks as precisely as possible.</p>
	<p class="py-2 text-green-200 text-lg font-semibold">Exported recordings, one per line:</p>
	<textarea @ref="inputArea" tabindex="0" class="bg-indigo-200 focus:ring-2 focus:ring-opacity-50 ring-0 focus:ring-indigo-300 text-indigo-900 p-2 w-full text-sm rounded-sm border-0 font-mono h-40" type="text" @bind="recordingValue" @onsubmit="Submit" />
</label>
<button class="my-2 px-4 py-2 font-semibold text-green-900 hover:text-green-800 bg-green-300 hover:bg-green-200 border-0 rounded-sm" @onclick="Submit">submit</button>

@if (result?.Error != null)
{
	<h3 class="text-2xl my-2 text-red-300 font-semibold">Errors</h3>
	<pre class="font-sans">@result.Error</pre>
}
@if (result?.Warning != null)
{
	<h3 class="text-2xl my-2 text-yellow-300 font-semibold">Warnings</h3>
	<pre class="font-sans">@result.Warning</pre>
}
@if (result?.Output != null)
{
	<h3 class="text-2xl my-2 text-green-300 font-semibold">Result</h3>
	<p class="mb-1">For use in a <a href="https://d0sboots.github.io/perfect-tower/">script editor</a></p>
	<pre id="output" class="font-mono select-all p-3 bg-gray-800 text-gray-200 overflow-scroll h-80 rounded-sm w-full">@result.Output.AsScriptWithMacro.ReplaceLineEndings()</pre>
}

@code {
	ElementReference inputArea;
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		await base.OnAfterRenderAsync(firstRender);
		if (firstRender) await inputArea.FocusAsync();
	}

	string recordingValue;
	RecordingParser.Result? result;
	private void Submit()
	{
		result = RecordingParser.Parse(recordingValue);
	}
}

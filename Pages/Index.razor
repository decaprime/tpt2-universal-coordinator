@page "/"

<PageTitle>Universal Coordinator</PageTitle>

<h1 class="text-5xl text-green-300 font-semibold">Universal Coordinator</h1>
<h4 class="text-2xl font-light mb-2">Creates universal clicks from AI recordings for <a href="https://perfecttower2.com">The Perfect Tower 2</a></h4>
<label class="block py-2 m-0 text-indigo-50 space-y-2">
	<p>This utility outputs resolution independent click instructions. It expects a series of at least 3 recordings (made with F7 in game). Be as precise as possible by using erase/retry to attempt to click exact same area for each resolution.</p>
	<p class="py-1">For each recording:</p>
	<ol class="list-decimal list-inside">
		<li>Resize window</li>
		<li>Click top-right corner (this sets the recordings resolution)</li>
		<li>Click same sequence of points</li>
	</ol>
	<p class="py-2 text-green-200 text-lg font-semibold">Input recordings, one per line:</p>
	<textarea @ref="inputArea" tabindex="0" class="bg-indigo-200 focus:ring-2 focus:ring-opacity-50 ring-0 focus:ring-indigo-300 text-indigo-900 p-2 w-full text-sm rounded-sm border-0 font-mono h-40" type="text" @bind="recordingValue" @onsubmit="Submit" />
</label>
<button class="my-2 px-4 py-2 font-semibold text-green-900 hover:text-green-800 bg-green-300 hover:bg-green-200 border-0 rounded-sm" @onclick="Submit">submit</button>

@if (!string.IsNullOrWhiteSpace(error))
{
	<h3 class="text-2xl my-2 text-red-300 font-semibold">Errors</h3>
	<pre class="font-sans">@error</pre>
}
@if (!string.IsNullOrWhiteSpace(result))
{
	<h3 class="text-2xl my-2 text-green-300 font-semibold">Result</h3>
	<pre class="font-mono p-3 bg-gray-800 text-gray-200 overflow-x-scroll rounded-sm">@result</pre>
}
<footer class="border-t border-0 border-green-200 border-opacity-25 mt-4 p-2 text-right text-base font-light">
	built by <a href="https://discord.com/users/115195745782464512">@@deca<span class="font-thin">#9999</span></a> with Blazor, <a href="https://github.com/decaprime/tpt2-universal-coordinator">open source</a>, inspired by d0sboots</footer>

@code {
	ElementReference inputArea;
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		await base.OnAfterRenderAsync(firstRender);
		await inputArea.FocusAsync();
	}

	string recordingValue;
	string result, error;
	private void Submit()
	{
		(result, error) = RecordingParser.Parse(recordingValue);
	}
}
